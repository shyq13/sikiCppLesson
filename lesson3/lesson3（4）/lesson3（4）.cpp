#include <iostream>
//运行该项目时一定要将它设为启动项！！！
//运行该项目时一定要将它设为启动项！！！
//运行该项目时一定要将它设为启动项！！！
using namespace std;

//第一步，定义枚举类型
enum HeroType {      //使用enum关键字定义枚举类型
	Tank,   //坦克
	Assassin,   //刺客
	Mage,   //法师
	ADC,    //射手
	Assist,   //辅助
	//以上定义的都是“值”（强调）
	//也可以强制将枚举类型对应的值改变，如下：
	Werewolf = 100,   //将Werewolf（狼人）对应的值修改为100
	Seer     //预言家，由于Wereolf（狼人）的值是100，所以Seer（预言家）的值将在100的基础上加以
};

int main() {
	//枚举类型
	//什么是枚举类型？
	//枚举类型是一种特殊的整型类型，它可以用来表示一组有限的整数
	//枚举类型的值是从0开始的，每个值是递增1的
	int heroTypeNo = 1;   //定义一个变量，表示人物的种类，其中的1就表示一种类别（坦克）
	//以上的区分方式并不是特别好，因为看到变量的值后并不能分辨出是什么类型
	//所以我们可以使用枚举类型来表示这些变量
	HeroType heroType = Tank;   //定义一个枚举类型变量，表示人物的种类
	//使用枚举类型变量可以清楚的知道这个变量的值代表什么
	heroType = Mage;   //修改英雄类型为Mage（法师）
	cout << "现在英雄的类型是" << heroType << endl;   //输出英雄的类型
	//输出结果："现在英雄的类型是2"
	//输出结果为什么是2呢？
	//因为枚举类型的本质上是整型，法师又在枚举类型声明中的第三个，所以输出2
	//枚举类型只是将数字转换为了字母，只是为了更加容易审阅代码
	//所以枚举类型也可以当做数字使用，如下↓：
	int plus = Mage + 2;    //Mage的值是2，加上2后等于4，所以plus的值是4
	cout << "plus的值是" << plus << endl;   //输出plus的值，输出结果：plus的值是4

	heroType = HeroType(4);   //使用强制类型转换，将整型4强制转换为Assist
	//相当于  heroType = Assist;
	cout << "强制类型转换后的英雄类型是" << heroType << endl;   //输出英雄的类型
	//输出结果：强制类型转换后的英雄类型是4

	cout << "英雄类型狼人对应的值是" << HeroType::Werewolf << endl;   //输出狼人对应的值
	//输出结果：英雄类型狼人对应的值是100

	cout << "预言家对应的值是" << HeroType::Seer << endl;  //输出预言家对应的值
	//输出结果：预言家对应的值是101
	
	
	return 0;
}